<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="captionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAABGdBTUEAALGPC/xhBQAAAyhJREFUWEft
        mD1oFFEUhTd/+EP8gahBghgjBItggoqVKEabNBaiWKnEwgSilQEbkWAngp2lEFIKNiLYiARsRRC7ICLB
        NogEERFZz3n3zOTt7OzOm93JZov94JB5591738vu7H2zW+rQIUG5XO6FLkDPoJ+QzyfoNrRX4ZkwFpqF
        PkM+rM01uFavwrNBcBc0Df2GQngKbVN6FZxTTAhc8wbUpfR0ENAHvYHy8gMaV5kYeBNQ8t0I4TWU/upi
        gq/kK0Y1wazKsd4dsxrmpUpVgolrNt80j6Endtk0V7Q9A0YP1MhbtAbNQM2+E7Xgnnq0TbfRE87Oz5jy
        edt8dU7xTLhNEgwempeb+L/F9V2zCueBlnCLLJuXi2WlOzA+anbhvNMSbpHv5uViWukOjLuhf26mWFa1
        hFtk3bxcjCg9Bt6STRXKusq7BT6al4uNT6OAN2lTVbyFhiGeOnn5oPJugUfmBRPfN7iOjztc73Kz1RxU
        CGPyvuoLSnXJPOrycFOpzGVr69aQ4y8M8FjTlAPjA2YHU9Ge2Ad5XodyRKnMZWvzx8mjc6O9CHiLNpUJ
        D5TKBxQYV91UGH7/XIXmNOR4hAEexzQVA2+/TWVSeYQSmHxVk29bGv79udOs8oosen6b4l//tvDv5+cM
        qMMKVP9xLxQUOuVKGv2y6UcfmCVZ9HZDkxq2FizsH73nZdOP2tRZWfSmIN4mxbxKESjIh+h6Ogz9giIW
        lcrcfrPKO2TRi56w7kPbobSafQoPB0nzUB6S9+MLXUb/dAhVHSIIJM5ZfjB+m9qjS16H9Ol7Cm8MFLhl
        dYKI25QP/Kwn/hmFNgcKhX5NidtUBDy2Pf9eTnJdocWAgpesbiZxmyIYHzI7lcsKKxYUvmj16xK3KYIx
        f3RIY0ohmwMWOGPr1CRuUwRjnjBJzml6c8FCJ229VNim3I8H+LvPOZWcdkVaBRYcg2p99XgPsVt8cyOD
        sceV3lqw8Cj0l7vIgDGjStsasAF+xfjD3dSAc8MK31qwkSEorVfSG1JYe4ANDUL+z0K8HtR0e4GNDUD8
        jYAakN2eYIM8Mot95uzQoe0plf4DSttyF1NkqOUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAACUWAAAlFgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJ2GQfSdhmv0nYZrtJ2GQYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJ2GQnSdhm40nYZ/9J2Gf/Sdhm40nYZCQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJ2GQvSdhm+0nYZ/9J2GfPSdhkb0nYZ8tJ2
        Gb/SdhkMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJ2GQ7SdhnF0nYZ/9J2Gf/SdhmwAAAAANJ2
        GazSdhn/0nYZxtJ2GQ8AAAAAAAAAAAAAAAAAAAAAAAAAANJ2GRLSdhnL0nYZ/9J2Gf/Sdhn/0nYZZ9J2
        GSbSdhlf0nYZ/9J2Gf/SdhnN0nYZEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSdhkO0nYZ9dJ2
        GR7Sdhm30nYZFdJ2GXYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSdhl40nYZ/9J2Gf/Sdhn/0nYZPNJ2
        GZPSdhke0nYZ/9J2GS/SdhkL0nYZ5tJ2Gf/Sdhn/0nYZegAAAAAAAAAA0nYZ3tJ2Gf/Sdhn/0nYZ/9J2
        GXzSdhkW0nYZZ9J2Gf/SdhmE0nYZc9J2Gf/Sdhn/0nYZ/9J2Gd8AAAAAAAAAANJ2GfrSdhn/0nYZ/9J2
        Gf/Sdhm8AAAAANJ2GbHSdhn/0nYZ/9J2Gf/Sdhn/0nYZ/9J2Gf/Sdhn6AAAAAAAAAADSdhnZ0nYZ/9J2
        Gf/Sdhn/0nYZ9dJ2GRzSdhnz0nYZ/9J2Gf/Sdhn/0nYZ/9J2Gf/Sdhn/0nYZ1wAAAAAAAAAA0nYZaNJ2
        Gf/Sdhn/0nYZ/9J2Gf/Sdhn/0nYZvNJ2GbzSdhn/0nYZ/9J2Gf/Sdhn/0nYZ/9J2GWUAAAAAAAAAAAAA
        AADSdhll0nYZ1dJ2GfnSdhng0nYZdNJ2GQPSdhkD0nYZdNJ2GeDSdhn50nYZ1dJ2GWMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AAD8PwAA+B8AAPAPAADghwAAwAMAAPgfAACAAQAAgAEAAIIBAACAAQAAgAEAAMAD
        AAD//wAA//8AAA==
</value>
  </data>
</root>